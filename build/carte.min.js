"use strict";var carte={};!function(){var t=function(){};t.prototype.setStart=function(t){this.startIndex=t},t.prototype.setEnd=function(t){this.endIndex=t},t.prototype.containsIndex=function(t){return this.startIndex<=t&&t<=this.endIndex},window.Geom=t}(),function(){var t=function(t,e){this.points=t,this.properties=e};t.prototype=new Geom,t.prototype.constructor=t,window.Line=t}(),function(){var t=function(t,e){this.lines=t,this.properties=e};t.prototype=new Geom,t.prototype.constructor=t,window.MultiLine=t}(),function(){var t=function(t,e){this.polygons=t,this.properties=e};t.prototype=new Geom,t.prototype.constructor=t,t.prototype.computeBoundingSphere=function(){this.sphere||(this.sphere=new THREE.Sphere);for(var t=[],e=0;e<this.polygons.length;e++){var i=this.polygons[e];if(i.rings.length>0)for(var s=i.rings[0],n=0;n<s.length;n++)t.push(new THREE.Vector3(s[n].point.x,s[n].point.y,0))}this.sphere.setFromPoints(t)},t.prototype.intersectsSphere=function(t){return this.sphere.intersectsSphere(t)},t.prototype.getCenter=function(){return this.sphere.center},window.MultiPolygon=t}(),function(){var t=function(t,e,i,s){this.latLng=new google.maps.LatLng(t,e),this.point=i.fromLatLngToPoint(this.latLng),this.properties=s?s:{},this.properties.latLng=this.latLng,this.properties.point=this.point};window.Point=t}(),function(){var t=function(t,e){this.rings=t,this.properties=e,this.sphere=new THREE.Sphere};t.prototype=new Geom,t.prototype.constructor=t,t.prototype.computeBoundingSphere=function(){if(this.rings.length>0){for(var t=this.rings[0],e=[],i=0;i<t.length;i++)e.push(new THREE.Vector3(t[i].point.x,t[i].point.y,0));this.sphere.setFromPoints(e)}},t.prototype.intersectsSphere=function(t){return this.sphere.intersectsSphere(t)},t.prototype.getCenter=function(){return this.sphere.center},window.Polygon=t}(),function(){var t=function(t,e,i,s){this.x=t,this.y=e,this.width=i,this.height=s,this.ulx=t,this.uly=e,this.lrx=t+i,this.lry=e+s};t.prototype.update=function(t,e,i,s){this.x=t,this.y=e,this.width=i,this.height=s,this.ulx=t,this.uly=e,this.lrx=t+i,this.lry=e+s},t.prototype.containsPoint=function(t,e){return this.ulx<=t&&t<=this.lrx&&this.uly<=e&&e<=this.lry},t.prototype.containsRect=function(t){return this.containsPoint(t.x,t.y)&&this.containsPoint(t.x+t.width,t.y+t.height)},t.prototype.containsDimensions=function(t,e){return this.width>=t&&this.height>=e},t.prototype.getNormalizedRect=function(e,i){var s=this.x/e,n=this.y/i,o=this.width/e,r=this.height/i;return new t(s,n,o,r)},window.Rectangle=t}(),function(){var t=function(t){this.rect=t,this.name="sprite0",this.image=null,this.child=[]};t.prototype.computeNormal=function(t,e){return this.maxWidth=t,this.maxHeight=e,this.normalRect=this.rect.getNormalizedRect(t,e),this},t.prototype.insert=function(e,i){var s=null;if(null!==this.image)return this.child.length>0?(s=this.child[0].insert(e,i),null!==s?s:this.child[1].insert(e,i)):null;if(this.rect.containsDimensions(i.width,i.height)){if(this.rect.width==i.width&&this.rect.height==i.height)return this.name=e,this.image=i,this;if(this.child.length>0)return s=this.child[0].insert(e,i),null!==s?s:this.child[1].insert(e,i);var n=this.rect,o=this.rect.width-i.width,r=this.rect.height-i.height;return o>r?(this.child[0]=new t(new Rectangle(n.x,n.y,i.width,n.height)),this.child[1]=new t(new Rectangle(n.x+i.width,n.y,o,n.height))):(this.child[0]=new t(new Rectangle(n.x,n.y,n.width,i.height)),this.child[1]=new t(new Rectangle(n.x,n.y+i.height,n.width,r))),this.child[0].computeNormal(this.maxWidth,this.maxHeight),this.child[1].computeNormal(this.maxWidth,this.maxHeight),this.child[0].insert(e,i)}return null},t.prototype.get=function(t){if(this.name==t)return this;if(this.child.length>0){var e=this.child[0].get(t);return null!==e?e:this.child[1].get(t)}return null},t.prototype["delete"]=function(t){var e=this.get(t);return e&&e.clear(),e},t.prototype.clear=function(){this.name="",this.image=null};var e=function(e,i){this.canvas=document.createElement("canvas"),this.canvas.width=e,this.canvas.height=i,this.context=this.canvas.getContext("2d"),this.texture=new THREE.Texture(this.canvas),this.texture.minFilter=THREE.LinearMipMapLinearFilter,this.texture.magFilter=THREE.LinearFilter,this.texture.flipY=!1,this.pnode=new t(new Rectangle(0,0,e,i)),this.pnode.computeNormal(e,i)};e.prototype=new THREE.EventDispatcher,e.prototype.constructor=e,e.prototype.get=function(t){return this.pnode.get(t)},e.prototype.add=function(t,e){if(void 0===e||null===e)return null;if(null!==this.get(t))return null;var i=this.pnode.insert(t,e);if(i){var s=i.rect;this.context.drawImage(e,s.x,s.y),this.texture.needsUpdate=!0,this.dispatchEvent({type:"sprite_added"})}return i},e.prototype.remove=function(t){var e=this.pnode["delete"](t);if(e){var i=e.rect;this.context.clearRect(i.x,i.y,i.width,i.height),this.texture.needsUpdate=!0,this.dispatchEvent({type:"sprite_removed"})}return e},e.prototype.load=function(t,e){},window.DynamicSpriteSheet=e}(),function(){function t(t,e){for(var i=0;i<t.points.length;i++){var s=t.points[i];e.vertices.push(new THREE.Vector3(s.point.x,s.point.y,1)),i==t.points.length-1?(s=t.points[0],e.vertices.push(new THREE.Vector3(s.point.x,s.point.y,1))):(s=t.points[i+1],e.vertices.push(new THREE.Vector3(s.point.x,s.point.y,1)))}}var e=function(){};e.prototype.init=function(){return this},e.prototype.draw=function(){return this},e.prototype.update=function(){return this},e.prototype.create=function(e){e=e||{};var i=e.features||[],s=null!==e.strokeColor&&void 0!==e.strokeColor?e.strokeColor:16777215;if(null===i||0===i.length)return null;for(var n=new THREE.Geometry,o=0;o<i.length;o++){var r=i[o];if(r instanceof Line)t(r,n);else if(r instanceof MultiLine)for(var h in r.lines)t(r.lines[h],n)}var a=new THREE.LineSegments(n,new THREE.LineBasicMaterial({color:s,linewidth:2,opacity:.25,transparent:!0,depthWrite:!1,depthTest:!1}));return a},window.LineRenderer=e}(),function(){var t=function(){};t.prototype.init=function(){return this},t.prototype.draw=function(){},t.prototype.update=function(){},t.prototype.create=function(t){},t.prototype.add=function(t){},t.prototype.remove=function(t){},t.prototype.destroy=function(t){},window.ObjectRenderer=t}(),function(){var t="uniform float pointSize;attribute vec4 tile;varying vec4 vTile;varying vec3 vColor;void main() {	vec4 mvPosition = modelViewMatrix * vec4(position, 1.0);	gl_Position = projectionMatrix * mvPosition;	gl_PointSize = pointSize;	vTile = tile;	vColor = color;}",e="uniform sampler2D tex1;uniform vec2 spriteSize;varying vec4 vTile;varying vec3 vColor;void main() {	vec2 tileUV = vTile.xy + vTile.zw * gl_PointCoord;	gl_FragColor = texture2D(tex1, tileUV) * vec4(vColor.rgb, 1.0);}",i=Math.pow(2,32)-1,s=-99999,n=function(){};n.prototype=Object.create(THREE.EventDispatcher.prototype);var o=function(t){this.webGlView=t,this.pointSize=32,this.raycaster=new THREE.Raycaster,this.mouse=new THREE.Vector2,this.markers={},this.hoveredMarker=null,this.minIndex=i,this.maxIndex=0,this.index=0};o.prototype.init=function(){if(this.positions=new Float32Array(3e6),typeof this.positions.fill==typeof Function)this.positions.fill(s);else for(var i=0;i<this.positions.length;i++)this.positions[i]=s;return this.positionsAttribute=new THREE.BufferAttribute(this.positions,3),this.colors=new Float32Array(3e6),this.colorsAttribute=new THREE.BufferAttribute(this.colors,3),this.tiles=new Float32Array(4e6),this.tilesAttribute=new THREE.BufferAttribute(this.tiles,4),this.geometry=new THREE.BufferGeometry,this.geometry.addAttribute("position",this.positionsAttribute),this.geometry.addAttribute("color",this.colorsAttribute),this.geometry.addAttribute("tile",this.tilesAttribute),this.spriteSheet=new DynamicSpriteSheet(256,256),this.material=new THREE.ShaderMaterial({uniforms:{tex1:{type:"t",value:this.spriteSheet.texture},pointSize:{type:"f",value:this.pointSize}},vertexColors:THREE.VertexColors,vertexShader:t,fragmentShader:e,transparent:!0,depthWrite:!1,depthTest:!1}),this.sceneObject=new THREE.Points(this.geometry,this.material),this.addEventListeners(),this},o.prototype.addEventListeners=function(){var t=this.webGlView.getMap();google.maps.event.addListener(t,"mousemove",this.handleDocumentMouseMove.bind(this)),google.maps.event.addListener(t,"click",this.handleDocumentMouseClick.bind(this))},o.prototype.handleDocumentMouseMove=function(t){this.update(t)},o.prototype.handleDocumentMouseClick=function(t){this.update(t),this.hoveredMarker&&this.hoveredMarker.dispatchEvent({type:"click"})},o.prototype._createMarker=function(t){var e=new n;return e.index=t,this.markers[t]=e,e},o.prototype.add=function(t){for(var e=3*this.index;e<this.positions.length&&this.positions[e]!==s;)e=3*++this.index;if(e>=this.positions.length)return void console.log("[PointRenderer] Run out of points!!!");t=t||{},t.position=t.position||{x:0,y:0,z:0},t.color=t.color||{r:1,g:1,b:1},this.positions[e+0]=t.position.x,this.positions[e+1]=t.position.y,this.positions[e+2]=t.position.z,this.colors[e+0]=t.color.r,this.colors[e+1]=t.color.g,this.colors[e+2]=t.color.b;var i=this.spriteSheet.get(t.imageName);i||(i=this.spriteSheet.add(t.imageName,t.image),i||console.log("[PointRenderer] SpriteSheet already full."));var n=null!==i?i.normalRect:{x:0,y:0,width:0,height:0};this.tiles[4*this.index+0]=n.x,this.tiles[4*this.index+1]=n.y,this.tiles[4*this.index+2]=n.width,this.tiles[4*this.index+3]=n.height,this.minIndex=Math.min(this.minIndex,this.index),this.maxIndex=Math.max(this.maxIndex,this.index);var o=this.markers[this.index]||this._createMarker(this.index);return o.options=t,this.index++,o},o.prototype.remove=function(t){var e=3*t.index;this.positions[e+0]=s,this.positions[e+1]=s,this.positions[e+2]=s,this.minIndex=Math.min(this.minIndex,t.index),this.maxIndex=Math.max(this.maxIndex,t.index),this.index>t.index&&(this.index=t.index)},o.prototype.draw=function(){this.minIndex=this.minIndex==i?0:this.minIndex;var t=this.maxIndex!=this.minIndex;this.positionsAttribute.updateRange.offset=3*this.minIndex,this.positionsAttribute.updateRange.count=3*this.maxIndex+3-3*this.minIndex,this.positionsAttribute.needsUpdate=t,this.colorsAttribute.updateRange.offset=3*this.minIndex,this.colorsAttribute.updateRange.count=3*this.maxIndex+3-3*this.minIndex,this.colorsAttribute.needsUpdate=t,this.tilesAttribute.updateRange.offset=4*this.minIndex,this.tilesAttribute.updateRange.count=4*this.maxIndex+4-4*this.minIndex,this.tilesAttribute.needsUpdate=t,t&&(this.geometry.computeBoundingBox(),this.geometry.computeBoundingSphere()),this.minIndex=i,this.maxIndex=0},o.prototype.update=function(t){void 0!==t.clientX&&void 0!==t.clientY?(this.mouse.x=t.clientX/this.webGlView.width*2-1,this.mouse.y=2*-(t.clientY/this.webGlView.height)+1):t.pixel&&(this.mouse.x=t.pixel.x/this.webGlView.width*2-1,this.mouse.y=2*-(t.pixel.y/this.webGlView.height)+1),this.raycaster.params.Points.threshold=16/Math.pow(2,this.webGlView.scale),this.raycaster.setFromCamera(this.mouse,this.webGlView.camera);var e=this.raycaster.intersectObject(this.sceneObject),i=e.length>0?e[0]:null;i?(null===this.hoveredMarker?(this.hoveredMarker=this.markers[i.index],this.hoveredMarker.dispatchEvent({type:"mouseover"})):this.hoveredMarker.index!=i.index&&(this.hoveredMarker.dispatchEvent({type:"mouseout"}),this.hoveredMarker=this.markers[i.index],this.hoveredMarker.dispatchEvent({type:"mouseover"})),this.webGlView&&this.webGlView.map&&this.webGlView.map.setOptions({draggableCursor:"pointer"})):null!==this.hoveredMarker&&(this.hoveredMarker.dispatchEvent({type:"mouseout"}),this.hoveredMarker=null,this.webGlView&&this.webGlView.map&&this.webGlView.map.setOptions({draggableCursor:null}))},window.PointRenderer=o}(),function(){function t(t,e,i,s){for(var n=0;n<t.rings.length;n++){for(var o=t.rings[n],r=[],h=[],a=0,l=0;l<o.length;l++){var p=o[l];r.push(p.point.x),r.push(p.point.y),e.vertices.push(new THREE.Vector3(p.point.x,p.point.y,10)),i.vertices.push(new THREE.Vector3(p.point.x,p.point.y,1)),l==o.length-1?(p=o[0],i.vertices.push(new THREE.Vector3(p.point.x,p.point.y,1))):(p=o[l+1],i.vertices.push(new THREE.Vector3(p.point.x,p.point.y,1)))}n>0&&h.push(a),a+=o.length;for(var d=earcut(r,null,2),c=0;c<d.length;c+=3){var u=new THREE.Face3(d[c+2]+s,d[c+1]+s,d[c+0]+s);e.faces.push(u)}}}var e=function(){};e.prototype=new ObjectRenderer,e.prototype.constructor=e,e.prototype.create=function(e){e=e||{};var i=e.features||[],s=null!==e.fillColor&&void 0!==e.fillColor?e.fillColor:255,n=null!==e.fillOpacity&&void 0!==e.fillOpacity?e.fillOpacity:.25,o=null!==e.strokeColor&&void 0!==e.strokeColor?e.strokeColor:16777215,r=null!==e.strokeOpacity&&void 0!==e.strokeOpacity?e.strokeOpacity:.25;if(null===i||0===i.length)return null;for(var h=new THREE.Geometry,a=new THREE.Geometry,l=h.vertices.length,p=0;p<i.length;p++){var d=i[p];if(d.setStart(h.vertices.length),d instanceof Polygon)t(d,h,a,l),l=h.vertices.length;else if(d instanceof MultiPolygon)for(var c in d.polygons)t(d.polygons[c],h,a,l),l=h.vertices.length;d.setEnd(h.vertices.length)}h.computeFaceNormals(),h.computeBoundingSphere(),h.computeBoundingBox();var u=new THREE.Mesh(h,new THREE.MeshBasicMaterial({color:s,opacity:n,transparent:!0,depthWrite:!1,depthTest:!1})),m=new THREE.LineSegments(a,new THREE.LineBasicMaterial({color:o,opacity:r,linewidth:5,transparent:!0,depthWrite:!1,depthTest:!1}));return{shape:u,outline:m}},window.PolygonRenderer=e}(),function(){var t="attribute vec4 tile;varying vec2 vUv;varying vec4 vTile;void main() {	vec4 mvPosition = modelViewMatrix * vec4(position, 1.0);	gl_Position = projectionMatrix * mvPosition;	vUv = uv;	vTile = tile;}",e="uniform sampler2D tex1;uniform float alpha;varying vec2 vUv;varying vec4 vTile;void main() {	vec2 uv = vTile.xy + vTile.zw * vUv;	gl_FragColor = texture2D(tex1, uv) * vec4(1, 1, 1, alpha);}",i=Math.pow(2,32)-1,s=-99999,n=12,o=6,r=8,h=16,a=function(){this.minIndex=i,this.maxIndex=0,this.index=0,this.sprites=[],this.opacity=.8};a.prototype.init=function(){if(this.positions=new Float32Array(1024*n),typeof this.positions.fill==typeof Function)this.positions.fill(s);else for(var i=0;i<this.positions.length;i++)this.positions[i]=s;return this.positionsAttribute=new THREE.BufferAttribute(this.positions,3),this.indices=new Uint16Array(1024*o),this.indicesAttribute=new THREE.BufferAttribute(this.indices,1),this.uv=new Float32Array(1024*r),this.uvAttribute=new THREE.BufferAttribute(this.uv,2),this.tiles=new Float32Array(1024*h),this.tilesAttribute=new THREE.BufferAttribute(this.tiles,4),this.geometry=new THREE.BufferGeometry,this.geometry.setIndex(this.indicesAttribute),this.geometry.addAttribute("position",this.positionsAttribute),this.geometry.addAttribute("uv",this.uvAttribute),this.geometry.addAttribute("tile",this.tilesAttribute),this.spriteSheet=new DynamicSpriteSheet(4096,4096),this.material=new THREE.ShaderMaterial({uniforms:{tex1:{type:"t",value:this.spriteSheet.texture},alpha:{type:"f",value:this.opacity}},vertexShader:t,fragmentShader:e}),this.sceneObject=new THREE.Mesh(this.geometry,this.material),this},a.prototype.add=function(t){for(var e=this.index*n;e<this.positions.length&&this.positions[e]!==s;)e=++this.index*n;if(e>=this.positions.length)return void console.log("[SpriteRenderer] Run out of points!!!");var i=t.image,a=t.imageName,l=this.spriteSheet.get(a);l||(l=this.spriteSheet.add(a,i),l||console.log("[SpriteRenderer] SpriteSheet already full.")),t=t||{},t.position=t.position||{x:0,y:0,z:0},t.width=t.width||256,t.height=t.height||256,t.imageName=t.icon||"red-dot",this.positions[e+0]=t.position.x,this.positions[e+1]=t.position.y,this.positions[e+2]=t.position.z,this.positions[e+3]=t.position.x+t.width,this.positions[e+4]=t.position.y,this.positions[e+5]=t.position.z,this.positions[e+6]=t.position.x,this.positions[e+7]=t.position.y+t.height,this.positions[e+8]=t.position.z,this.positions[e+9]=t.position.x+t.width,this.positions[e+10]=t.position.y+t.height,this.positions[e+11]=t.position.z;var p=this.index*o;this.indices[p+0]=4*this.index+0,this.indices[p+1]=4*this.index+2,this.indices[p+2]=4*this.index+1,this.indices[p+3]=4*this.index+1,this.indices[p+4]=4*this.index+2,this.indices[p+5]=4*this.index+3;var d=this.index*r;this.uv[d+0]=0,this.uv[d+1]=0,this.uv[d+2]=1,this.uv[d+3]=0,this.uv[d+4]=0,this.uv[d+5]=1,this.uv[d+6]=1,this.uv[d+7]=1;var c=this.index*h;return this.tiles[c+0]=this.tiles[c+4]=this.tiles[c+8]=this.tiles[c+12]=l.normalRect.x,this.tiles[c+1]=this.tiles[c+5]=this.tiles[c+9]=this.tiles[c+13]=l.normalRect.y,this.tiles[c+2]=this.tiles[c+6]=this.tiles[c+10]=this.tiles[c+14]=l.normalRect.width,this.tiles[c+3]=this.tiles[c+7]=this.tiles[c+11]=this.tiles[c+15]=l.normalRect.height,this.minIndex=Math.min(this.minIndex,this.index),this.maxIndex=Math.max(this.maxIndex,this.index),{index:this.index++,name:a}},a.prototype.remove=function(t){for(var e=t.index*n,i=0;n>i;i++)this.positions[e+i]=s;this.spriteSheet.remove(t.name),this.minIndex=Math.min(this.minIndex,t.index),this.maxIndex=Math.max(this.maxIndex,t.index),this.index>t.index&&(this.index=t.index)},a.prototype.draw=function(){this.minIndex=this.minIndex==i?0:this.minIndex;var t=this.maxIndex!=this.minIndex,e=n;this.positionsAttribute.updateRange.offset=this.minIndex*e,this.positionsAttribute.updateRange.count=this.maxIndex*e+e-this.minIndex*e,this.positionsAttribute.needsUpdate=t;var s=o;this.indicesAttribute.updateRange.offset=this.minIndex*s,this.indicesAttribute.updateRange.count=this.maxIndex*s+s-this.minIndex*s,this.indicesAttribute.needsUpdate=t;var a=r;this.uvAttribute.updateRange.offset=this.minIndex*a,this.uvAttribute.updateRange.count=this.maxIndex*a+a-this.minIndex*a,this.uvAttribute.needsUpdate=t;var l=h;this.tilesAttribute.updateRange.offset=this.minIndex*l,this.tilesAttribute.updateRange.count=this.maxIndex*l+l-this.minIndex*l,this.tilesAttribute.needsUpdate=t,t&&(this.geometry.computeBoundingBox(),this.geometry.computeBoundingSphere()),this.minIndex=i,this.maxIndex=0},window.SpriteRenderer=a}(),function(){var t=function(t){this.name=t.name;var e=t.x,i=t.y,s=t.width,n=t.height;this.rect=new Rectangle(e,i,s,n)};t.prototype.computeNormal=function(t,e){return this.normalRect=this.rect.getNormalizedRect(t,e),this};var e=function(e,i){this.texture=e,this.sprites={};for(var s=0;s<i.length;s++)this.sprites[i[s].name]=new t(i[s]).computeNormal(e.image.width,e.image.height)};e.prototype.get=function(t){return this.sprites[t]},window.SpriteSheet=e}(),function(){var t=function(){for(var t=document.createElement("div"),e=["transform","WebkitTransform","MozTransform","OTransform","msTransform"],i=0;i<e.length;i++){var s=e[i];if(void 0!==t.style[s])return s}return e[0]}(),e=function(e,i){this._map=e,this.camera=new THREE.OrthographicCamera(0,255,0,255,-3e3,3e3),this.camera.position.z=1e3,this.scene=new THREE.Scene,this.sceneMask=new THREE.Scene,this.sceneForeground=new THREE.Scene,this.renderer=new THREE.WebGLRenderer({alpha:!0,antialiasing:!0,clearColor:0,clearAlpha:0}),this.renderer.setPixelRatio(window.devicePixelRatio),this.renderer.autoClear=!1,this.renderer.domElement.style["pointer-events"]="none",this.context=this.renderer.context,this.animationFrame=null,this.objectRenderers=[],this.numMasks=0,i=i?i:{},this.maskAlwaysEnabled=i.maskAlwaysEnabled,this.update=function(){var e=this.map,i=this.getProjection();if(e&&i){var s=e.getBounds(),n=new google.maps.LatLng(s.getNorthEast().lat(),s.getSouthWest().lng()),o=this.renderer.domElement,r=i.fromLatLngToDivPixel(n);o.style[t]="translate("+Math.round(r.x)+"px,"+Math.round(r.y)+"px)";var h=e.getDiv(),a=h.clientWidth,l=h.clientHeight;(a!==this.width||l!==this.height)&&(this.width=a,this.height=l,this.renderer.setSize(a,l));var p=e.getZoom(),d=Math.pow(2,p),c=e.getProjection().fromLatLngToPoint(n);this.camera.position.x=c.x,this.camera.position.y=c.y,this.scale=p,this.camera.scale.x=this.width/256/d,this.camera.scale.y=this.height/256/d}},this.draw=function(){cancelAnimationFrame(this.animationFrame),this.animationFrame=requestAnimationFrame(this.deferredRender.bind(this))},this.deferredRender=function(){this.update();var t=this.context,e=(this.renderer,this.numMasks>0||this.maskAlwaysEnabled);this.renderer.setClearColor(16777215,0),this.renderer.clear(!0,!0,!0),e&&(t.colorMask(!1,!1,!1,!1),t.depthMask(!1),t.enable(t.STENCIL_TEST),t.stencilOp(t.REPLACE,t.REPLACE,t.REPLACE),t.stencilFunc(t.ALWAYS,0,4294967295),t.clearStencil(1),this.renderer.render(this.sceneMask,this.camera,null,!0),t.colorMask(!0,!0,!0,!0),t.depthMask(!0),t.stencilFunc(t.EQUAL,0,4294967295),t.stencilOp(t.KEEP,t.KEEP,t.KEEP));for(var i=0;i<this.objectRenderers.length;i++)this.objectRenderers[i].draw();this.renderer.render(this.scene,this.camera,null,!e),e&&t.disable(t.STENCIL_TEST),this.pointRenderer.draw(),this.renderer.render(this.sceneForeground,this.camera),this.dispatchEvent({type:"render"})}};e.prototype=_.extend(new google.maps.OverlayView,new THREE.EventDispatcher),e.prototype.constructor=e,e.prototype.getMap=function(){return this._map},e.prototype.onAdd=function(){this.getPanes().overlayLayer.appendChild(this.renderer.domElement),this.addEventListeners(),this.dispatchEvent({type:"added_to_dom"})},e.prototype.onRemove=function(){this.renderer.domElement;this.canvas.parentElement.removeChild(this.canvas),this.removeEventListeners(),this.dispatchEvent({type:"removed_from_dom"})},e.prototype.init=function(){return this.pointRenderer=new PointRenderer(this).init(),this.sceneForeground.add(this.pointRenderer.sceneObject),this.spriteRenderer=(new SpriteRenderer).init(),this.scene.add(this.spriteRenderer.sceneObject),this.polygonRenderer=(new PolygonRenderer).init(),this.lineRenderer=(new LineRenderer).init(),this.objectRenderers.push(this.polygonRenderer),this.objectRenderers.push(this.spriteRenderer),this.objectRenderers.push(this.lineRenderer),this},e.prototype.addEventListeners=function(){this.changeHandler=google.maps.event.addListener(this.map,"bounds_changed",this.draw.bind(this))},e.prototype.removeEventListeners=function(){google.maps.event.removeListener(this.changeHandler),this.changeHandler=null},e.prototype.addObject=function(t){this.scene.add(t)},e.prototype.removeObject=function(t){this.scene.remove(t)},e.prototype.addPoint=function(t){return this.pointRenderer.add(t)},e.prototype.removePoint=function(t){this.pointRenderer.remove(t)},e.prototype.addSprite=function(t){return this.spriteRenderer.add(t)},e.prototype.removeSprite=function(t){this.spriteRenderer.remove(t)},e.prototype.createGeometry=function(t){var e=this.polygonRenderer.create(t);return null!==e&&this.addGeometry(e),e},e.prototype.addGeometry=function(t){this.scene.add(t.shape),this.scene.add(t.outline)},e.prototype.removeGeometry=function(t){this.scene.remove(t.shape),this.scene.remove(t.outline)},e.prototype.destroyGeometry=function(t){delete t.shape,delete t.outline},e.prototype.createLine=function(t){var e=this.lineRenderer.create(t);return null!==e&&this.addLine(e),e},e.prototype.addLine=function(t){this.scene.add(t)},e.prototype.removeLine=function(t){this.scene.remove(t)},e.prototype.destroyLine=function(t){},e.prototype.createMask=function(t){var e=this.polygonRenderer.create(t);return null!==e&&this.addMask(e),e},e.prototype.addMask=function(t){this.sceneMask.add(t.shape),this.numMasks+=1},e.prototype.removeMask=function(t){this.sceneMask.remove(t.shape),this.numMasks-=1},e.prototype.destroyMask=function(t){delete t.shape,delete t.outline},e.prototype.hitsMask=function(t,e){this.raycaster||(this.raycaster=new THREE.Raycaster),this.mouse||(this.mouse=new THREE.Vector3(0,0,1)),this.direction||(this.direction=new THREE.Vector3(0,0,1)),this.mouse.x=t/this.width*2-1,this.mouse.y=2*-(e/this.height)+1,this.mouse.z=1,this.mouse.unproject(this.camera),this.raycaster.set(this.mouse,this.direction);var i=this.raycaster.intersectObjects(this.sceneMask.children);return i.length>0},window.WebGLView=e}(),function(){var t={};t.get=function(t,e){var i=Q.defer(),s=e.responseType;if("blob"===s)var n=$("<img />").attr("src",t).on("load",function(){i.resolve({data:n[0]})});else $.ajax(t,e).success(function(t,e,s){i.resolve({data:t,status:e,xhr:s})}).error(function(t,e,s){i.reject({xhr:t,status:e,error:s})});return i.promise},window.http=t}(),function(){var t=64,e=function(t){this.webGlView=t,this.views=[]};e.prototype.setMap=function(t){return t?(this.map=t,this.update(),this._addEventListeners()):(this._removeEventListeners(),this.map=t),this},e.prototype.addView=function(e){var i=this.views.indexOf(e);0>i&&this.views.push(e);this.bounds;return e.setClusterPixelSize(t),this},e.prototype.removeView=function(t){var e=this.views.indexOf(t);return e>=0&&this.views.splice(e,1),t.clear(),this},e.prototype._addEventListeners=function(){this.changeListener=google.maps.event.addListener(this.map,"bounds_changed",this.update.bind(this))},e.prototype._removeEventListeners=function(){google.maps.event.removeListener(this.changeListener)},e.prototype.update=function(){},window.ClusterController=e}(),function(){function t(t,i,s){var n=s.fromLatLngToPoint(t),o={x:n.x*Math.pow(2,i),y:n.y*Math.pow(2,i)},r={x:Math.floor(o.x/e),y:Math.floor(o.y/e)};return r}var e=256,i=function(t,e){this.webGlView=t,e=e?e:{},this.minZoom=void 0!==e.minZoom?e.minZoom:0,this.maxZoom=void 0!==e.maxZoom?e.maxZoom:10,this.clampedBounds=new Rectangle(0,0,0,0),this.box=new Rectangle(0,0,0,0),this.zoom=0,this.enabled=!1,this.views=[]};i.prototype.setMap=function(t){return t?(this.map=t,this.update(),this._addEventListeners()):(this._removeEventListeners(),this.map=t),this},i.prototype.addView=function(t){var i=this.views.indexOf(t);0>i&&this.views.push(t);var s=this.clampedBounds;return t.setTileSize(e),t.showTiles(s.ulx,s.uly,s.lrx,s.lry,this.zoom),this},i.prototype.removeView=function(t){var e=this.views.indexOf(t);return e>=0&&this.views.splice(e,1),t.clear(),this},i.prototype._addEventListeners=function(){this.changeListener=google.maps.event.addListener(this.map,"bounds_changed",this.update.bind(this))},i.prototype._removeEventListeners=function(){google.maps.event.removeListener(this.changeListener)},i.prototype.hasChangedZoom=function(t){return this.zoom!=t},i.prototype.hasChangedBounds=function(t){var e=this.clampedBounds;return e.ulx!=t.ulx||e.uly!=t.uly||e.lrx!=t.lrx||e.lry!=t.lry},i.prototype.getTileBounds=function(e,i,s,n){var o=t(e,s,n),r=t(i,s,n);return new Rectangle(o.x,o.y,r.x-o.x,r.y-o.y)},i.prototype.update=function(){var t=this.map,e=t.getProjection(),i=t.getZoom(),s=t.getBounds(),n=s.getNorthEast(),o=s.getSouthWest(),r=new google.maps.LatLng(n.lat(),o.lng()),h=new google.maps.LatLng(o.lat(),n.lng());i=Math.max(this.minZoom,i),i=Math.min(this.maxZoom,i);var a=this.getTileBounds(r,h,i,e),l=this.clampedBounds,p=Math.min(l.ulx,a.ulx),d=Math.min(l.uly,a.uly),c=Math.max(l.lrx,a.lrx)-p,u=Math.max(l.lry,a.lry)-d,m=new Rectangle(p,d,c,u);this.hasChangedZoom(i)&&(this.deleteTiles(l,l,new Rectangle(-1,-1,0,0),this.zoom),l=new Rectangle(-1,-1,0,0),m=a),this.hasChangedBounds(a)&&this.updateTiles(m,l,a,i)},i.prototype.updateTiles=function(t,e,i,s){for(var n=this.views,o=0;o<n.length;o++){for(var r=t.ulx;r<=t.lrx;r++)for(var h=t.uly;h<=t.lry;h++)i.containsPoint(r,h)?e.containsPoint(r,h)||n[o].showTile(r,h,s):e.containsPoint(r,h)&&n[o].hideTile(r,h,s);this.webGlView.draw()}this.zoom=s,this.clampedBounds=i},i.prototype.deleteTiles=function(t,e,i,s){for(var n=this.views,o=0;o<n.length;o++){for(var r=t.ulx;r<=t.lrx;r++)for(var h=t.uly;h<=t.lry;h++)!i.containsPoint(r,h)&&e.containsPoint(r,h)&&n[o].deleteTile(r,h,s);this.webGlView.draw()}this.zoom=s,this.clampedBounds=i},i.prototype.getObjectUnderPoint=function(t,i){var s=this.map.getBounds(),n=new google.maps.LatLng(s.getNorthEast().lat(),s.getSouthWest().lng()),o=this.map.getProjection().fromLatLngToPoint(n),r=Math.pow(2,this.zoom),h=o.x*r,a=o.y*r,l=1/Math.pow(2,this.map.getZoom()-this.zoom),p=t*l,d=i*l,c=this.box,u=this.views,m=0,v=0;for(m=this.clampedBounds.ulx;m<=this.clampedBounds.lrx;m++)for(v=this.clampedBounds.uly;v<=this.clampedBounds.lry;v++)if(c.update(m*e-h,v*e-a,e,e),c.containsPoint(p,d))for(var y=this.zoom==this.map.getZoom(),g=u.length-1;g>=0;g--){var f=u[g].getObjectUnderPointOnTile(t,i,m,v,this.zoom,y);if(f)return f}return null},window.TileController=i}(),function(){var t=function(t,e){this.url=t,this.projection=e,this.fileExtension="json",this.responseType="json"};t.prototype.parse=function(t){var e={polygons:[],points:[],lines:[]},i=this,s=function(t){var s=i._parseFeature(t);s.polygons.length>0&&(e.polygons=e.polygons.concat(s.polygons)),s.points.length>0&&(e.points=e.points.concat(s.points)),s.lines.length>0&&(e.lines=e.lines.concat(s.lines))};if(t)if("FeatureCollection"==t.type)for(var n=t.features,o=0;o<n.length;o++)s(n[o]);else"Feature"==t.type&&s(t);return e},t.prototype._parseFeature=function(t){var e,i,s,n,o=[],r=[],h=[];if("Polygon"==t.geometry.type){for(e=t.geometry.coordinates,i=[],n=0;n<e.length;n++)s=e[n],i.push(this._parseCoordinates(s));o.push(new Polygon(i,t.properties))}else if("MultiPolygon"==t.geometry.type){e=t.geometry.coordinates;var a=[];for(n=0;n<e.length;n++){var l=e[n];i=[];for(var p=0;p<l.length;p++)s=l[p],i.push(this._parseCoordinates(s));a.push(new Polygon(i,t.properties))}o.push(new MultiPolygon(a,t.properties))}else if("LineString"==t.geometry.type)h.push(new Line(this._parseCoordinates(t.geometry.coordinates),t.properties));else if("MultiLineString"==t.geometry.type){e=t.geometry.coordinates;var d=[];for(n=0;n<e.length;n++){var c=e[n];d.push(new Line(this._parseCoordinates(c),t.properties))}h.push(new MultiLine(d,t.properties))}else"Point"==t.geometry.type&&(e=t.geometry.coordinates,r.push(new Point(e[1],e[0],this.projection,t.properties)));return{polygons:o,points:r,lines:h}},t.prototype._parseCoordinates=function(t){for(var e=[],i=0;i<t.length;i++)e.push(new Point(t[i][1],t[i][0],this.projection));return e},window.GeoJSONDataSource=t}(),function(){var t=function(t){this.url=t,this.fileExtension="png",this.responseType="blob"};t.prototype.parse=function(t){return t},window.ImageDataSource=t}(),function(){var t=function(t,e){this.url=t,this.projection=e,this.fileExtension="",this.responseType="arraybuffer"};t.prototype.parse=function(t){for(var e=this.projection,i=new Uint32Array(t),s=[],n=0;n<i.length;n+=4){var o=new google.maps.LatLng(i[n]/1e6,i[n+1]/1e6),r=e.fromLatLngToPoint(o),h=i[n+2],a=i[n+3];s.push({id:a,count:h,latLng:o,point:r})}return s},window.STADataSource=t}(),function(){var t=function(t,e){this.request=t,this.timeout=e};t.prototype.cancel=function(){this.timeout.resolve("Request cancelled")};var e=function(t,e,i){this.dataSource=t,this.$http=e,this.$q=i,this.tiles={},this.promises={}};e.prototype.getTileUrl=function(t,e,i){return this.dataSource.url+"/"+i+"/"+t+"/"+e+"."+this.dataSource.fileExtension},e.prototype.getTile=function(e,i,s){var n=this.$q.defer(),o=this.getTileUrl(e,i,s);if(this.tiles[o])n.resolve({url:o,data:this.tiles[o]});else if(this.promises[o])n.reject("Already being loaded.");else{var r=this,h=this.$q.defer(),a=this.$http.get(o,{responseType:this.dataSource.responseType,timeout:h.promise}).then(function(t){delete r.promises[o],r.tiles[o]=r.dataSource.parse(t.data),n.resolve({url:o,data:r.tiles[o]})},function(t){delete r.promises[o],n.reject(t)});this.promises[o]=new t(a,h)}return n.promise},e.prototype.deleteTile=function(t,e,i){var s=this.getTileUrl(t,e,i);this.promises[s]&&(this.promises[s].cancel(),delete this.promises[s]),this.tiles[s]&&delete this.tiles[s]},window.TileProvider=e}(),function(){var t=function(t,e,i){this.tileProvider=t,this.webGlView=e,this.webServices=i,this.tiles={},this.shownTiles={}};t.prototype.setTileSize=function(t){this.tileSize=t},t.prototype.showTiles=function(t,e,i,s,n){for(var o=t;i>=o;o++)for(var r=e;s>=r;r++)this.showTile(o,r,n);this.webGlView.draw()},t.prototype.showTile=function(t,e,i){var s=this.tileProvider.getTileUrl(t,e,i);if(!this.shownTiles[s])if(this.shownTiles[s]=!0,this.tiles[s]){if(!this.tiles[s].geometry){var n=Math.pow(2,i),o=this.tileSize/n,r={
position:{x:t*o,y:e*o,z:i},width:o,height:o,image:this.tiles[s].data,imageName:s};this.tiles[s].geometry=this.webGlView.addSprite(r),this.webGlView.draw()}}else{var h=this;h.webServices.checkLayerTile(s).then(function(n){n.data.is_tile_exist&&h.tileProvider.getTile(t,e,i).then(function(n){h.tiles[s]=n;var o=Math.pow(2,i),r=h.tileSize/o,a={position:{x:t*r,y:e*r,z:i},width:r,height:r,image:h.tiles[s].data,imageName:s};h.shownTiles[s]&&(h.tiles[s].geometry=h.webGlView.addSprite(a),h.webGlView.draw())},function(t){})},function(t){console.log(t)})}},t.prototype.hideTile=function(t,e,i){var s=this.tileProvider.getTileUrl(t,e,i);this.shownTiles[s]=!1,this.tiles[s]&&this.tiles[s].geometry&&(this.webGlView.removeSprite(this.tiles[s].geometry),this.tiles[s].geometry=null)},t.prototype.deleteTile=function(t,e,i){this.hideTile(t,e,i);var s=this.tileProvider.getTileUrl(t,e,i);this.tiles[s]&&delete this.tiles[s],this.tileProvider.deleteTile(t,e,i)},t.prototype.clear=function(){var t="";for(t in this.tiles)this.tiles[t].geometry&&(this.webGlView.removeSprite(this.tiles[t].geometry),this.tiles[t].geometry=null);for(t in this.shownTiles)this.shownTiles[t]=!1;this.webGlView.draw()},t.prototype.getObjectUnderPointOnTile=function(t,e,i,s,n){return null},window.ImageTileView=t}(),function(){var t=function(){};window.SiteClusterView=t}(),function(){function t(){return(255&Math.floor(255*Math.random()))<<16|(255&Math.floor(255*Math.random()))<<8|255&Math.floor(255*Math.random())}function e(t,e,i,s){var n=i.intersectObject(e.polygons.shape),o=n.length>0?n[0]:null;if(o)for(var r=o.face.a,h=0;h<e.data.polygons.length;h++)if(e.data.polygons[h].containsIndex(r))return e.data.polygons[h];return null}var i=function(t,e,i,s){this.tileProvider=t,this.webGlView=e,this.iconImage=i.iconImage,this.fillColor=i.fillColor,this.fillOpacity=i.fillOpacity,this.strokeColor=i.strokeColor,this.strokeOpacity=i.strokeOpacity,this.webServices=s,this.raycaster=new THREE.Raycaster,this.cameraDirection=new THREE.Vector3(0,0,1),this.mouse3D=new THREE.Vector3(0,0,1),this.mouseSphere=new THREE.Sphere,this.tiles={},this.shownTiles={}};i.prototype.setTileSize=function(t){this.tileSize=t},i.prototype.showTiles=function(t,e,i,s,n){for(var o=[],r=t;i>=r;r++)for(var h=e;s>=h;h++)o.push(this.showTile(r,h,n));return this.webGlView.draw(),this.tileProvider.$q.all(o)},i.prototype.showTile=function(t,e,i){var s=this.tileProvider.getTileUrl(t,e,i);if(!this.shownTiles[s]){this.shownTiles[s]=!0;var n=this.tileProvider.$q.defer();if(this.tiles[s])(this.tiles[s].polygons||this.tiles[s].lines)&&this.tiles[s].polygons&&this.webGlView.addGeometry(this.tiles[s].polygons),this.tiles[s].lines?this.webGlView.addLine(this.tiles[s].lines):this.tiles[s].data&&this.createFeatures(s,this.tiles[s].data),n.resolve(s);else{var o=this;o.checkLayerTileRequest=o.webServices.checkLayerTile(s),o.checkLayerTileRequest.then(function(r){r.data.is_tile_exist?o.tileProvider.getTile(t,e,i).then(function(t){if(o.tiles[s])n.reject(s);else{o.tiles[s]=t;var e=t.data;o.shownTiles[s]&&o.createFeatures(s,e),n.resolve(s)}},function(t){n.reject(s)}):n.resolve(s)},function(t){console.log(t),n.resolve(s)})}return n.promise}},i.prototype.hideTile=function(t,e,i){var s=this.tileProvider.getTileUrl(t,e,i);if(this.shownTiles[s]=!1,this.tiles[s]&&(this.tiles[s].polygons&&(this.webGlView.removeGeometry(this.tiles[s].polygons),delete this.tiles[s].polygons,this.tiles[s].polygons=null),this.tiles[s].lines&&(this.webGlView.removeLine(this.tiles[s].lines),delete this.tiles[s].lines,this.tiles[s].lines=null),this.tiles[s].points)){for(var n=this.tiles[s].points,o=0;o<n.length;o++)this.webGlView.removePoint(n[o]);this.tiles[s].points=null}this.checkLayerTileRequest&&(this.checkLayerTileRequest.cancel(),this.checkLayerTileRequest=null)},i.prototype.deleteTile=function(t,e,i){this.hideTile(t,e,i);var s=this.tileProvider.getTileUrl(t,e,i);this.tiles[s]&&delete this.tiles[s],this.tileProvider.deleteTile(t,e,i)},i.prototype.clear=function(){var t="";for(t in this.tiles)if(this.tiles[t].polygons&&(this.webGlView.removeGeometry(this.tiles[t].polygons),delete this.tiles[t].polygons,this.tiles[t].polygons=null),this.tiles[t].lines&&(this.webGlView.removeLine(this.tiles[t].lines),delete this.tiles[t].lines,this.tiles[t].lines=null),this.tiles[t].points){for(var e=this.tiles[t].points,i=0;i<e.length;i++)this.webGlView.removePoint(e[i]);this.tiles[t].points=null}for(t in this.shownTiles)this.shownTiles[t]=!1;this.webGlView.draw()},i.prototype.createFeatures=function(e,i){var s=!1;if(i.polygons.length>0){var n={};n.features=i.polygons,n.fillColor=this.fillColor,n.fillOpacity=this.fillOpacity,n.strokeColor=this.strokeColor,n.strokeOpacity=this.strokeOpacity,this.tiles[e].polygons=this.webGlView.createGeometry(n),s=!0}if(i.lines.length>0){var o={};o.features=i.lines,o.strokeColor=this.useRandomColors?t():null,this.tiles[e].lines=this.webGlView.createLine(o),s=!0}for(var r=[],h=0;h<i.points.length;h++){var a=i.points[h],l={position:{x:a.point.x,y:a.point.y,z:100},color:{r:1,g:1,b:1},image:this.iconImage,imageName:this.iconImage.url,properties:a.properties};r.push(this.webGlView.addPoint(l))}this.tiles[e].points=r,s&&this.webGlView.draw()},i.prototype.getObjectUnderPointOnTile=function(t,i,s,n,o,r){var h=this.tileProvider.getTileUrl(s,n,o);if(this.tiles[h]&&this.tiles[h].polygons){var a=this.tiles[h],l=1/Math.pow(2,o);return this.mouse3D.x=t/this.webGlView.width*2-1,this.mouse3D.y=2*-(i/this.webGlView.height)+1,this.mouse3D.z=1,this.mouse3D.unproject(this.webGlView.camera),this.raycaster.linePrecision=l,this.raycaster.set(this.mouse3D,this.cameraDirection),this.mouse3D.z=0,this.mouseSphere.set(this.mouse3D,l),e(this.mouse,a,this.raycaster)}return null},window.VectorTileView=i}();
//# sourceMappingURL=carte.min.js.map
